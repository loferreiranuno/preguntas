version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik:ro
      - traefik-public-certificates:/letsencrypt
    networks:
      - traefik-public
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=loferreira.nuno@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=https://api.crititag.com
        - VITE_WS_URL=wss://api.crititag.com
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`crititag.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.frontend.middlewares=security-headers"
      - "traefik.http.middlewares.security-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.security-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.security-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.security-headers.headers.frameDeny=true"

  backend:
    build: ./backend
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=your_password
      - DB_NAME=kahoot_clone
      - DB_PORT=5432
    networks:
      - traefik-public
      - internal
    labels:    
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.crititag.com`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=3000" 
      # Add WebSocket support
      - "traefik.http.routers.backend.middlewares=websocket-headers"
      - "traefik.http.middlewares.websocket-headers.headers.customrequestheaders.Upgrade=websocket"
      - "traefik.http.middlewares.websocket-headers.headers.customrequestheaders.Connection=Upgrade"

  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=your_password
      - POSTGRES_DB=kahoot_clone
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - internal

networks:
  traefik-public:
    external: true
  internal:
    internal: true

volumes:
  postgres_data:
  traefik-public-certificates: